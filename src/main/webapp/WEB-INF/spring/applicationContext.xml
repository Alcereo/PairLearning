<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <!--        DAO             -->

    <jee:jndi-lookup id="postgresDataSource"
                     expected-type="javax.sql.DataSource"
                     jndi-name="java:comp/env/jdbc/PairLearning" />

    <bean id="sessionDAO"
          class="ru.alcereo.pairlearning.DAO.SessionDAOPG"
          p:dataSource-ref="postgresDataSource"
    />

    <bean id="usersDAO"
          class="ru.alcereo.pairlearning.DAO.UsersDAOPG"
          p:dataSource-ref="postgresDataSource"
    />

    <bean id="topicRowsDAO"
          class="ru.alcereo.pairlearning.DAO.TopicRowsDAOPG"
          p:dataSource-ref="postgresDataSource"
    />

    <bean id="usersDAOHibernate"
          class="ru.alcereo.pairlearning.DAO.UsersDAOHibernate"
          p:hibernateSessionFactory-ref="hibernateSessionFactory"/>

    <bean id="topicRowsDAOHibernate"
          class="ru.alcereo.pairlearning.DAO.TopicRowsDAOHibernate"
          p:hibernateSessionFactory-ref="hibernateSessionFactory"
    />


    <!--        HIBERNATE       -->

    <bean id="hibernateSessionFactory"
          class="org.springframework.orm.hibernate5.LocalSessionFactoryBean"
          p:dataSource-ref="postgresDataSource"
          p:packagesToScan="ru.alcereo.pairlearning.DAO.Entities"
          p:hibernateProperties-ref="hibernateProperties"
    />

    <util:properties id="hibernateProperties">
        <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQL95Dialect</prop>
        <prop key="hibernate.show_sql">true</prop>
    </util:properties>

    <!--        Services        -->

    <bean id="entityMapper"
          class="ru.alcereo.pairlearning.Service.EntityMapper"
          />

    <bean id="sessionService"
          class="ru.alcereo.pairlearning.Service.SessionService"
          p:users-ref="usersDAOHibernate"
          p:mapperFacade-ref="entityMapper"
    />

    <bean id="topicService"
          class="ru.alcereo.pairlearning.Service.TopicService.TopicService"
          p:topicRows-ref="topicRowsDAOHibernate"
          p:usersDAO-ref="usersDAOHibernate"
    />

    <bean id="registrationService"
          class="ru.alcereo.pairlearning.Service.RegistrationService" >
        <property name="users" ref="usersDAO"/>
        <property name="sessions" ref="sessionDAO"/>
        <property name="sendingService" ref="sendingService"/>
    </bean>

    <bean id="sendingService"
          class="ru.alcereo.pairlearning.Service.SendingServiceMock"
    />

    <bean id="topicInviteChecker"
          class="ru.alcereo.pairlearning.Service.Chat.TopicInviteChecker">
        <property name="topicService" ref="topicService"/>
    </bean>

    <bean id="chatRoom"
          class="ru.alcereo.pairlearning.Service.Chat.ChatRoomGrouped" >
        <property name="inviteChecker" ref="topicInviteChecker"/>
    </bean>

    <bean id="socketSessionProvider"
          class="ru.alcereo.pairlearning.SocketChat.SocketSessionProvider" >
        <property name="sessionService" ref="sessionService"/>
        <property name="chatRoom" ref="chatRoom"/>
    </bean>

    <bean id="chatSocketConnection"
          class="ru.alcereo.pairlearning.SocketChat.ChatSocketConnection" >
        <property name="socketSessionProvider" ref="socketSessionProvider"/>
    </bean>

</beans>